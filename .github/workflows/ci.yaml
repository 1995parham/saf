---
name: ci
on:
  - push
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --enable-all
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - run: cd deployments && docker-compose up -d
      - run: cd cmd/saf
      - run: go test -v ./... -covermode=atomic -coverprofile=coverage.out
      - uses: codecov/codecov-action@v1
        with:
          files: coverage.out
  docker:
    name: docker
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/1995parham/saf
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - uses: docker/build-push-action@v2
        with:
          file: "build/package/Dockerfile"
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  helm:
    name: helm
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: install helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: run chart-releaser
        uses: helm/chart-releaser-action@v1.2.0
        with:
          charts_dir: deployments/charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
